Ext.data.JsonP.glu_extjs_adapters_field({"mixedInto":[],"tagname":"class","extends":"glu.extjs.adapters.component","alternateClassNames":[],"inheritdoc":null,"parentMixins":[],"singleton":false,"statics":{"css_mixin":[],"cfg":[],"method":[],"property":[],"event":[],"css_var":[]},"requires":[],"mixins":[],"code_type":"nop","inheritable":false,"meta":{"author":["Mike Gai"]},"members":{"css_mixin":[],"cfg":[{"tagname":"cfg","owner":"glu.extjs.adapters.component","meta":{},"name":"cls","id":"cfg-cls"},{"tagname":"cfg","owner":"glu.extjs.adapters.field","meta":{},"name":"fieldLabel","id":"cfg-fieldLabel"},{"tagname":"cfg","owner":"glu.extjs.adapters.component","meta":{},"name":"hidden","id":"cfg-hidden"},{"tagname":"cfg","owner":"glu.extjs.adapters.component","meta":{},"name":"itemCls","id":"cfg-itemCls"},{"tagname":"cfg","owner":"glu.extjs.adapters.field","meta":{},"name":"valid","id":"cfg-valid"},{"tagname":"cfg","owner":"glu.extjs.adapters.field","meta":{},"name":"value","id":"cfg-value"}],"method":[],"event":[],"property":[{"tagname":"property","owner":"glu.extjs.adapters.field","meta":{},"name":"","id":"property-"}],"css_var":[]},"private":null,"uses":[],"subclasses":["glu.extjs.adapters.checkbox","glu.extjs.adapters.combo","glu.extjs.adapters.pickerfield","glu.extjs.adapters.textfield"],"name":"glu.extjs.adapters.field","aliases":{},"superclasses":["glu.extjs.adapters.component"],"component":false,"html_meta":{"author":null},"id":"class-glu.extjs.adapters.field","html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='docClass'>glu.extjs.adapters.component</a><div class='subclass '><strong>glu.extjs.adapters.field</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/glu.extjs.adapters.checkbox' rel='glu.extjs.adapters.checkbox' class='docClass'>glu.extjs.adapters.checkbox</a></div><div class='dependency'><a href='#!/api/glu.extjs.adapters.combo' rel='glu.extjs.adapters.combo' class='docClass'>glu.extjs.adapters.combo</a></div><div class='dependency'><a href='#!/api/glu.extjs.adapters.pickerfield' rel='glu.extjs.adapters.pickerfield' class='docClass'>glu.extjs.adapters.pickerfield</a></div><div class='dependency'><a href='#!/api/glu.extjs.adapters.textfield' rel='glu.extjs.adapters.textfield' class='docClass'>glu.extjs.adapters.textfield</a></div><h4>Files</h4><div class='dependency'><a href='source/basic.html#glu-extjs-adapters-field' target='_blank'>basic.js</a></div><div class='dependency'><a href='source/field.html#glu-extjs-adapters-field' target='_blank'>field.js</a></div></pre><div class='doc-contents'><p>Fields in glu share two basic properties : a value property whose change behavior is normalized across all field types\n(even in Ext 3.x), and a fieldLabel.\nIn form-rich applications, glu encourages you to find ways to minimize their visual setup down to simply specifying their\ngrouping and order:</p>\n\n<pre><code> {\n     xtype : 'form',\n     defaultType : 'autofield',\n     items : ['name','ssn', {\n             xtype:'fieldset',\n             items:['street',\n                 {\n                     xtype : 'fieldcontainer',\n                     layout : 'hbox',\n                     items : ['city','state','zip']\n                 }\n             ]\n         }]\n  }\n</code></pre>\n\n<p>That way, visual conventions can be easily managed globally without having to create additional component/widgets,\nand with an easy way to opt-out for individual fields (just fully specify what they should look like as normal).</p>\n\n<p>See the autofield for an example of how to auto-generate xtypes/configurations for your fields.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-cls' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='defined-in docClass'>glu.extjs.adapters.component</a><br/><a href='source/component.html#glu-extjs-adapters-component-cfg-cls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.component-cfg-cls' class='name expandable'>cls</a><span> : String</span></div><div class='description'><div class='short'>one-way binding. ...</div><div class='long'><p><em>one-way binding.</em> Sets a convenience css class. Since the binding removes the old class before adding the new, this\nproperty is suitable for a variety of dynamic class effects, made easy by using text substitutions in the binding. For example:</p>\n\n<pre><code> cls : 'my-widget-status-@{status}'\n</code></pre>\n\n<p>will dynamically change the class by naming convention to match the current status.</p>\n</div></div></div><div id='cfg-fieldLabel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='glu.extjs.adapters.field'>glu.extjs.adapters.field</span><br/><a href='source/field.html#glu-extjs-adapters-field-cfg-fieldLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.field-cfg-fieldLabel' class='name expandable'>fieldLabel</a><span> : String</span></div><div class='description'><div class='short'>The label that will be applied to this field if in the appropriate layout. ...</div><div class='long'><p>The label that will be applied to this field if in the appropriate layout.</p>\n\n<p>Usually, it is best to make sure that this is a localization key and not an exact text literal</p>\n\n<pre><code> fieldLabel: '~~firstName~~'\n</code></pre>\n\n<p>will look up the key 'firstName' in the localizer and replace with the appropriate text</p>\n\n<p><strong>Convention: </strong> &#126;&#126;<em>firstName</em>&#126;&#126;</p>\n</div></div></div><div id='cfg-hidden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='defined-in docClass'>glu.extjs.adapters.component</a><br/><a href='source/component.html#glu-extjs-adapters-component-cfg-hidden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.component-cfg-hidden' class='name expandable'>hidden</a><span> : String</span></div><div class='description'><div class='short'>one-way binding. ...</div><div class='long'><p><em>one-way binding.</em> Sets the visibility of the component.</p>\n\n<p><strong>Convention:</strong> @{<em>foo</em>IsHidden}</p>\n</div></div></div><div id='cfg-itemCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='defined-in docClass'>glu.extjs.adapters.component</a><br/><a href='source/component.html#glu-extjs-adapters-component-cfg-itemCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.component-cfg-itemCls' class='name expandable'>itemCls</a><span> : String</span></div><div class='description'><div class='short'>one-way binding. ...</div><div class='long'><p><em>one-way binding.</em> Sets a convenience item css class. Since the binding removes the old class before adding the new, this\nproperty is suitable for a variety of dynamic class effects, made easy by using text substitutions in the binding. For example:</p>\n\n<pre><code> itemCls : 'my-widget-status-@{status}'\n</code></pre>\n\n<p>will dynamically change the class by naming convention to match the current status.</p>\n</div></div></div><div id='cfg-valid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='glu.extjs.adapters.field'>glu.extjs.adapters.field</span><br/><a href='source/field.html#glu-extjs-adapters-field-cfg-valid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.field-cfg-valid' class='name expandable'>valid</a><span> : Boolean/String</span></div><div class='description'><div class='short'>One-way binding\nUpdates the validity marking of the field. ...</div><div class='long'><p><em>One-way binding</em>\nUpdates the validity marking of the field.\nThe view model property can be either a boolean true/false\nor a string (empty for valid, anything else will be the error message)</p>\n\n<p><strong>Convention:</strong> @{<em>foo</em>IsValid}</p>\n</div></div></div><div id='cfg-value' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='glu.extjs.adapters.field'>glu.extjs.adapters.field</span><br/><a href='source/field.html#glu-extjs-adapters-field-cfg-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.field-cfg-value' class='name expandable'>value</a><span> : String/Number</span></div><div class='description'><div class='short'>Two-way binding. ...</div><div class='long'><p><em>Two-way binding</em>. The value of this field.</p>\n\n<p><strong>Convention: </strong> @{<em>firstName</em>}</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='glu.extjs.adapters.field'>glu.extjs.adapters.field</span><br/><a href='source/basic.html#glu-extjs-adapters-field-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.field-property-' class='name not-expandable'></a><span> : Object</span></div><div class='description'><div class='short'><p>class glu.extjs.adapters.menu</p>\n</div><div class='long'><p>class glu.extjs.adapters.menu</p>\n</div></div></div></div></div></div></div>","files":[{"href":"basic.html#glu-extjs-adapters-field","filename":"basic.js"},{"href":"field.html#glu-extjs-adapters-field","filename":"field.js"}]});