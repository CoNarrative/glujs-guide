Ext.data.JsonP.glu_extjs_adapters_paging({"mixedInto":[],"tagname":"class","extends":"glu.extjs.adapters.container","alternateClassNames":[],"inheritdoc":null,"parentMixins":[],"singleton":false,"statics":{"css_mixin":[],"cfg":[],"method":[],"property":[],"event":[],"css_var":[]},"requires":[],"mixins":[],"code_type":"assignment","inheritable":false,"meta":{"author":["Mike Gai, Nick Tackes"]},"members":{"css_mixin":[],"cfg":[{"tagname":"cfg","owner":"glu.extjs.adapters.component","meta":{},"name":"cls","id":"cfg-cls"},{"tagname":"cfg","owner":"glu.extjs.adapters.component","meta":{},"name":"hidden","id":"cfg-hidden"},{"tagname":"cfg","owner":"glu.extjs.adapters.component","meta":{},"name":"itemCls","id":"cfg-itemCls"},{"tagname":"cfg","owner":"glu.extjs.adapters.container","meta":{},"name":"items","id":"cfg-items"},{"tagname":"cfg","owner":"glu.extjs.adapters.paging","meta":{},"name":"page","id":"cfg-page"},{"tagname":"cfg","owner":"glu.extjs.adapters.paging","meta":{},"name":"refreshHandler","id":"cfg-refreshHandler"},{"tagname":"cfg","owner":"glu.extjs.adapters.paging","meta":{},"name":"store","id":"cfg-store"}],"method":[],"event":[],"property":[],"css_var":[]},"private":null,"uses":[],"subclasses":[],"name":"glu.extjs.adapters.paging","aliases":{},"superclasses":["glu.extjs.adapters.component","glu.extjs.adapters.container"],"component":false,"html_meta":{"author":null},"id":"class-glu.extjs.adapters.paging","html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='docClass'>glu.extjs.adapters.component</a><div class='subclass '><a href='#!/api/glu.extjs.adapters.container' rel='glu.extjs.adapters.container' class='docClass'>glu.extjs.adapters.container</a><div class='subclass '><strong>glu.extjs.adapters.paging</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/paging.html#glu-extjs-adapters-paging' target='_blank'>paging.js</a></div><div class='dependency'><a href='source/paging2.html#glu-extjs-adapters-paging' target='_blank'>paging.js</a></div></pre><div class='doc-contents'><p>The paging control has three basic functions within ExtJS\n - trigger a refresh\n - display total records and position therein\n - change the page number / start index\nWithin glu, all of these\nThe paging control is \"intercepted\" by the glu binder so that its typical behavior of changing the page number and\nforcing an update of the store is managed by the view model instead of assumed.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-cls' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='defined-in docClass'>glu.extjs.adapters.component</a><br/><a href='source/component.html#glu-extjs-adapters-component-cfg-cls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.component-cfg-cls' class='name expandable'>cls</a><span> : String</span></div><div class='description'><div class='short'>one-way binding. ...</div><div class='long'><p><em>one-way binding.</em> Sets a convenience css class. Since the binding removes the old class before adding the new, this\nproperty is suitable for a variety of dynamic class effects, made easy by using text substitutions in the binding. For example:</p>\n\n<pre><code> cls : 'my-widget-status-@{status}'\n</code></pre>\n\n<p>will dynamically change the class by naming convention to match the current status.</p>\n</div></div></div><div id='cfg-hidden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='defined-in docClass'>glu.extjs.adapters.component</a><br/><a href='source/component.html#glu-extjs-adapters-component-cfg-hidden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.component-cfg-hidden' class='name expandable'>hidden</a><span> : String</span></div><div class='description'><div class='short'>one-way binding. ...</div><div class='long'><p><em>one-way binding.</em> Sets the visibility of the component.</p>\n\n<p><strong>Convention:</strong> @{<em>foo</em>IsHidden}</p>\n</div></div></div><div id='cfg-itemCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/glu.extjs.adapters.component' rel='glu.extjs.adapters.component' class='defined-in docClass'>glu.extjs.adapters.component</a><br/><a href='source/component.html#glu-extjs-adapters-component-cfg-itemCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.component-cfg-itemCls' class='name expandable'>itemCls</a><span> : String</span></div><div class='description'><div class='short'>one-way binding. ...</div><div class='long'><p><em>one-way binding.</em> Sets a convenience item css class. Since the binding removes the old class before adding the new, this\nproperty is suitable for a variety of dynamic class effects, made easy by using text substitutions in the binding. For example:</p>\n\n<pre><code> itemCls : 'my-widget-status-@{status}'\n</code></pre>\n\n<p>will dynamically change the class by naming convention to match the current status.</p>\n</div></div></div><div id='cfg-items' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/glu.extjs.adapters.container' rel='glu.extjs.adapters.container' class='defined-in docClass'>glu.extjs.adapters.container</a><br/><a href='source/container.html#glu-extjs-adapters-container-cfg-items' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.container-cfg-items' class='name expandable'>items</a><span> : Array/glu.List/glu.ActivatorList/Ext.data.Store</span></div><div class='description'><div class='short'>one-way binding. ...</div><div class='long'><p><em>one-way binding.</em>\nThis indicates that the items collection under this control is entirely bound and controlled by an array, List, or\nStore within the view model. The items can be Records, Models, or Viewmodels.\nAs items are removed or added, they will be rendered appropriately through a defined itemTemplate (for Models\nand Viewmodels when an itemTemplate is defined)\nor through a matching view (for Viewmodels).\nThe items will honor their parent default xtype unless overriden.</p>\n\n<p>Since there is a collapsed tool available to the panel, we will support two-way binding in the future.</p>\n\n<p><strong>Convention:</strong> @{<em>item</em>List}</p>\n</div></div></div><div id='cfg-page' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='glu.extjs.adapters.paging'>glu.extjs.adapters.paging</span><br/><a href='source/paging2.html#glu-extjs-adapters-paging-cfg-page' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.paging-cfg-page' class='name expandable'>page</a><span> : Integer</span></div><div class='description'><div class='short'>The current page that this is set to. ...</div><div class='long'><p>The current page that this is set to.</p>\n\n<p>It is an unusual binding in that it doesn't update visually until after it receives a \"load\" event\nfrom the store.</p>\n\n<p><em>Two-way Binding</em></p>\n\n<p><strong>Convention</strong>: @{<em>itemList</em>Page}</p>\n</div></div></div><div id='cfg-refreshHandler' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='glu.extjs.adapters.paging'>glu.extjs.adapters.paging</span><br/><a href='source/paging2.html#glu-extjs-adapters-paging-cfg-refreshHandler' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.paging-cfg-refreshHandler' class='name not-expandable'>refreshHandler</a><span> : Function</span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='cfg-store' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='glu.extjs.adapters.paging'>glu.extjs.adapters.paging</span><br/><a href='source/paging2.html#glu-extjs-adapters-paging-cfg-store' target='_blank' class='view-source'>view source</a></div><a href='#!/api/glu.extjs.adapters.paging-cfg-store' class='name expandable'>store</a><span> : Ext.data.Store</span></div><div class='description'><div class='short'>The store for this pager. ...</div><div class='long'><p>The store for this pager.</p>\n\n<p><em>One-time binding</em></p>\n\n<p><strong>Convention</strong>: @{<em>itemList</em>}</p>\n</div></div></div></div></div></div></div>","files":[{"href":"paging.html#glu-extjs-adapters-paging","filename":"paging.js"},{"href":"paging2.html#glu-extjs-adapters-paging","filename":"paging.js"}]});